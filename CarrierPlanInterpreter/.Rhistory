colnames(NEI)
CoalCodes <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CoalCodes))
NEI <- NEI[i, ]
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(year, Emissions, data = SumPerTypePerYear, col = Group.2)
dev.off()
CoalCodes <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CoalCodes))
NEI <- NEI[i, ]
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(year, Emissions, data = NEI)
dev.off()
CoalCodes <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CoalCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(year, Emissions, data = YearSum)
dev.off()
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
YearSum
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(Group.1, x, data = YearSum)
dev.off()
CoalCodes <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CoalCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = "Emissions from coal comustion-related sources (Tons of PM_2.5)")
dev.off()
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = "Emissions from coal comustion-related sources (Tons of PM[2.5])")
dev.off()
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = "Emissions from coal comustion-related sources (Tons of PM_[2.5])")
dev.off()
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = paste("Emissions from coal comustion-related sources (Tons of PM",[2.5],")"))
dev.off()
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = "Emissions from coal comustion-related sources (Tons of PM2.5)")
dev.off()
options(scipen=999)
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = "Emissions from coal combustion-related sources (Tons of PM2.5/year)")
dev.off()
?grep
NEI <- subset(NEI, subset = fips == "24510")
CarCodes <- SCC$SCC[grep(c("motor","auto", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CarCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
NEI <- subset(NEI, subset = fips == "24510")
CarCodes <- SCC$SCC[grep("motor","auto", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CarCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
CarCodes <- SCC$SCC[grep("motor", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CarCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- subset(NEI, subset = fips == "24510")
CarCodes <- SCC$SCC[grep("motor", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CarCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- subset(NEI, subset = fips == "24510")
head(n = 100)
head(NEI, n = 100)
colnames(SCC)
head(SCC$Short.Name, n=100)
SCC$Short.Name[100-200]
colnames(SCC)
colnames(NEI)
head(NEI$type)
NEI$type <- as.factor(NEI$type)
summary(NEI)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- subset(NEI, subset = fips == "24510")
NEI <- subset(NEI, subset = type == "ON-ROAD")
head(NEI, n= 20)
BaltMotorVehiclesPerYEar <- aggregate(NEI, year, sum)
colnames(NEI)
BaltMotorVehiclesPerYEar <- aggregate(NEI, NEI$year, sum)
BaltMotorVehiclesPerYEar <- aggregate(NEI, list(NEI$year), sum)
BaltMotorVehiclesPerYEar <- aggregate(NEI$Emissions, list(NEI$year), sum)
BaltMotorVehiclesPerYEar
colnames(BaltMotorVehiclesPerYEar)<-c("Year","Emissions")
NEI <- subset(NEI, subset = fips == "24510")
NEI <- subset(NEI, subset = type == "ON-ROAD")
BaltMotorVehiclesPerYEar <- aggregate(NEI$Emissions, list(NEI$year), sum)
colnames(BaltMotorVehiclesPerYEar) <- c("Year","Emissions")
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(Year, Emissions, data = BaltMotorVehiclesPerYEar)
dev.off()
BaltMotorVehiclesPerYEar <- aggregate(NEI$Emissions, list(NEI$year), sum)
colnames(BaltMotorVehiclesPerYEar) <- c("Year","Emissions")
library(ggplot2)
options(scipen=999)
png("plot5.png")
qplot(Year, Emissions, data = BaltMotorVehiclesPerYEar)
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
BaltimoreCity <- subset(NEI, subset = fips == "24510")
BaltimoreCity <- subset(BaltimoreCity, subset = type == "ON-ROAD")
LA <- subset(NEI, subset = fips == "06037")
LA <- subset(LA, subset = type == "ON-ROAD")
BaltMotorVehiclesPerYEar <- aggregate(BaltimoreCity$Emissions, list(BaltimoreCity$year), sum)
colnames(BaltMotorVehiclesPerYEar) <- c("Year","Emissions")
LAMotorVehiclesPerYear <- aggregate(LA$Emissions, list(LA$year), sum)
colnames(LAMotorVehiclesPerYear) <- c("Year","Emissions")
library(ggplot2)
options(scipen=999)
png("plot6.png")
plot(LAMotorVehiclesPerYear$Year, LAMotorVehiclesPerYear$Emissions, type = "l", col = "red")
lines(BaltMotorVehiclesPerYEar$Year, BaltMotorVehiclesPerYEar$Emissions, type = "l", col ="blue")
legend("topright", lty = 1, col = c("red", "blue"), legend = c("LA motor vehicle emissions", "Baltimore City motor vehicle emissions"))
dev.off()
png("plot6.png")
par(mfrow = c(1, 2))
plot(LAMotorVehiclesPerYear$Year, LAMotorVehiclesPerYear$Emissions, type = "l", col = "red")
lines(BaltMotorVehiclesPerYEar$Year, BaltMotorVehiclesPerYEar$Emissions, type = "l", col ="blue")
legend("topright", lty = 1, col = c("red", "blue"), legend = c("LA motor vehicle emissions", "Baltimore City motor vehicle emissions"))
dev.off()
png("plot6.png")
par(mfrow = c(1, 2))
plot(LAMotorVehiclesPerYear$Year, LAMotorVehiclesPerYear$Emissions, type = "l", col = "red")
points(BaltMotorVehiclesPerYEar$Year, BaltMotorVehiclesPerYEar$Emissions, type = "l", col ="blue")
legend("topright", lty = 1, col = c("red", "blue"), legend = c("LA motor vehicle emissions", "Baltimore City motor vehicle emissions"))
dev.off()
png("plot6.png")
par(mfrow = c(1, 2))
plot(LAMotorVehiclesPerYear$Year, LAMotorVehiclesPerYear$Emissions, type = "l", col = "red")
points(BaltMotorVehiclesPerYEar$Emissions, type = "l", col ="blue")
legend("topright", lty = 1, col = c("red", "blue"), legend = c("LA motor vehicle emissions", "Baltimore City motor vehicle emissions"))
dev.off()
library(ggplot2)
options(scipen=999)
png("plot6.png")
par(mfrow = c(1, 2))
plot(LAMotorVehiclesPerYear$Year, LAMotorVehiclesPerYear$Emissions, type = "l", col = "red")
plot(BaltMotorVehiclesPerYEar$Year, BaltMotorVehiclesPerYEar$Emissions, type = "l", col ="blue")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Data99 <- subset(NEI, subset = year == 1999)
Data02 <- subset(NEI, subset = year == 2002)
Data05 <- subset(NEI, subset = year == 2005)
Data08 <- subset(NEI, subset = year == 2008)
years <- as.integer(c(1999,2002,2005,2008))
Emissions <- c(sum(Data99$Emissions), sum(Data02$Emissions), sum(Data05$Emissions), sum(Data08$Emissions))
options(scipen=999)
png("plot1.png")
plot(years,Emissions,type = "l")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Data99 <- subset(NEI, subset = year == 1999)
Data02 <- subset(NEI, subset = year == 2002)
Data05 <- subset(NEI, subset = year == 2005)
Data08 <- subset(NEI, subset = year == 2008)
Balt99 <- subset(Data99, subset = fips == "24510")
Balt02 <- subset(Data02, subset = fips == "24510")
Balt05 <- subset(Data05, subset = fips == "24510")
Balt08 <- subset(Data08, subset = fips == "24510")
years <- c(1998,2002,2005,2008)
BaltmoreEmissionsSumPerYear <- c(sum(Balt99$Emissions),sum(Balt02$Emissions),sum(Balt05$Emissions),sum(Balt08$Emissions))
options(scipen=999)
png("plot2.png")
plot(years,BaltmoreEmissionsSumPerYear,type="l")
abline(lm(BaltmoreEmissionsSumPerYear ~ years))
dev.off()
?abline
png("plot2.png")
plot(years,BaltmoreEmissionsSumPerYear,type="l")
abline(lm(BaltmoreEmissionsSumPerYear ~ years), lty = "2", col = "grey")
dev.off()
png("plot2.png")
plot(years,BaltmoreEmissionsSumPerYear,type="l")
abline(lm(BaltmoreEmissionsSumPerYear ~ years), lty = 2, col = "grey")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SumPerTypePerYear <- aggregate(NEI$Emissions, list(NEI$year,NEI$type), sum)
library(ggplot2)
options(scipen=999)
png("plot3.png")
qplot(Group.1, x, data = SumPerTypePerYear, col = Group.2)
dev.off()
BaltmoreEmissionsSumPerYear <- c(sum(Balt99$Emissions),sum(Balt02$Emissions),sum(Balt05$Emissions),sum(Balt08$Emissions))
Data99 <- subset(NEI, subset = year == 1999)
Data02 <- subset(NEI, subset = year == 2002)
Data05 <- subset(NEI, subset = year == 2005)
Data08 <- subset(NEI, subset = year == 2008)
Balt99 <- subset(Data99, subset = fips == "24510")
Balt02 <- subset(Data02, subset = fips == "24510")
Balt05 <- subset(Data05, subset = fips == "24510")
Balt08 <- subset(Data08, subset = fips == "24510")
years <- c(1998,2002,2005,2008)
BaltmoreEmissionsSumPerYear <- c(sum(Balt99$Emissions),sum(Balt02$Emissions),sum(Balt05$Emissions),sum(Balt08$Emissions))
colnames(BaltmoreEmissionsSumPerYear) <- c("Year","Emissions in tons PM2.5/year")
years <- c(1998,2002,2005,2008)
BaltmoreEmissionsSumPerYear <- c(sum(Balt99$Emissions),sum(Balt02$Emissions),sum(Balt05$Emissions),sum(Balt08$Emissions))
colnames(BaltmoreEmissionsSumPerYear) <- c("Year","Emissions in tons PM2.5/year")
BaltmoreEmissionsSumPerYear
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Data99 <- subset(NEI, subset = year == 1999)
Data02 <- subset(NEI, subset = year == 2002)
Data05 <- subset(NEI, subset = year == 2005)
Data08 <- subset(NEI, subset = year == 2008)
Balt99 <- subset(Data99, subset = fips == "24510")
Balt02 <- subset(Data02, subset = fips == "24510")
Balt05 <- subset(Data05, subset = fips == "24510")
Balt08 <- subset(Data08, subset = fips == "24510")
years <- c(1998,2002,2005,2008)
BaltmoreEmissionsSumPerYear <- c(sum(Balt99$Emissions),sum(Balt02$Emissions),sum(Balt05$Emissions),sum(Balt08$Emissions))
options(scipen=999)
png("plot2.png")
plot(years,BaltmoreEmissionsSumPerYear,type="l")
abline(lm(BaltmoreEmissionsSumPerYear ~ years), lty = 2, col = "grey")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Data99 <- subset(NEI, subset = year == 1999)
Data02 <- subset(NEI, subset = year == 2002)
Data05 <- subset(NEI, subset = year == 2005)
Data08 <- subset(NEI, subset = year == 2008)
years <- as.integer(c(1999,2002,2005,2008))
Emissions <- c(sum(Data99$Emissions), sum(Data02$Emissions), sum(Data05$Emissions), sum(Data08$Emissions))
options(scipen=999)
png("plot1.png")
plot(years,Emissions,type = "l")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Data99 <- subset(NEI, subset = year == 1999)
Data02 <- subset(NEI, subset = year == 2002)
Data05 <- subset(NEI, subset = year == 2005)
Data08 <- subset(NEI, subset = year == 2008)
Balt99 <- subset(Data99, subset = fips == "24510")
Balt02 <- subset(Data02, subset = fips == "24510")
Balt05 <- subset(Data05, subset = fips == "24510")
Balt08 <- subset(Data08, subset = fips == "24510")
years <- c(1998,2002,2005,2008)
BaltmoreEmissionsSumPerYear <- c(sum(Balt99$Emissions),sum(Balt02$Emissions),sum(Balt05$Emissions),sum(Balt08$Emissions))
options(scipen=999)
png("plot2.png")
plot(years,BaltmoreEmissionsSumPerYear,type="l")
abline(lm(BaltmoreEmissionsSumPerYear ~ years), lty = 2, col = "grey")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SumPerTypePerYear <- aggregate(NEI$Emissions, list(NEI$year,NEI$type), sum)
colnames(SumPerTypePerYear) <- c("Year", "Emissions")
library(ggplot2)
options(scipen=999)
png("plot3.png")
qplot(Year, Emissions, data = SumPerTypePerYear, col = Group.2)
dev.off()
qplot(Year, Emissions, data = SumPerTypePerYear, col = Group.2)
qplot(Year, Emissions, data = SumPerTypePerYear)
colnames(SumPerTypePerYear)
qplot(Year, Emission, data = SumPerTypePerYear, col = Type)
qplot(Year, Emission, data = SumPerTypePerYear, col = "Type")
qplot(Year, Emissions, data = SumPerTypePerYear, col = "Type")
qplot(Year, Emissions, data = SumPerTypePerYear, col = Type)
qplot(Group.1, x, data = SumPerTypePerYear, col = Group.2, xlab = "Year", ylab ="Tons of PM2.5 emissions/year")
SumPerTypePerYear <- aggregate(NEI$Emissions, list(NEI$year,NEI$type), sum)
qplot(Group.1, x, data = SumPerTypePerYear, col = Group.2, xlab = "Year", ylab ="Tons of PM2.5 emissions/year")
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SumPerTypePerYear <- aggregate(NEI$Emissions, list(NEI$year,NEI$type), sum)
library(ggplot2)
options(scipen=999)
png("plot3.png")
qplot(Group.1, x, data = SumPerTypePerYear, col = Group.2, xlab = "Year", ylab ="Tons of PM2.5 emissions/year")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
CoalCodes <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
i <- !is.na(match(NEI$SCC, CoalCodes))
NEI <- NEI[i, ]
YearSum <- aggregate(NEI$Emissions, list(NEI$year), sum)
library(ggplot2)
options(scipen=999)
png("plot4.png")
qplot(Group.1, x, data = YearSum, xlab = "Year", ylab = "Emissions from coal combustion-related sources (Tons of PM2.5/year)")
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- subset(NEI, subset = fips == "24510")
NEI <- subset(NEI, subset = type == "ON-ROAD")
BaltMotorVehiclesPerYEar <- aggregate(NEI$Emissions, list(NEI$year), sum)
colnames(BaltMotorVehiclesPerYEar) <- c("Year","Emissions")
library(ggplot2)
options(scipen=999)
png("plot5.png")
qplot(Year, Emissions, data = BaltMotorVehiclesPerYEar)
dev.off()
setwd("/home/frans")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
BaltimoreCity <- subset(NEI, subset = fips == "24510")
BaltimoreCity <- subset(BaltimoreCity, subset = type == "ON-ROAD")
LA <- subset(NEI, subset = fips == "06037")
LA <- subset(LA, subset = type == "ON-ROAD")
BaltMotorVehiclesPerYEar <- aggregate(BaltimoreCity$Emissions, list(BaltimoreCity$year), sum)
colnames(BaltMotorVehiclesPerYEar) <- c("Year","Emissions")
LAMotorVehiclesPerYear <- aggregate(LA$Emissions, list(LA$year), sum)
colnames(LAMotorVehiclesPerYear) <- c("Year","Emissions")
library(ggplot2)
options(scipen=999)
png("plot6.png")
par(mfrow = c(1, 2))
plot(LAMotorVehiclesPerYear$Year, LAMotorVehiclesPerYear$Emissions, type = "l", col = "red", xlab = "Year", ylab = "Emissions (Tons of PM2.5/year)", main = "LA Motor Vehicle Emissions")
plot(BaltMotorVehiclesPerYEar$Year, BaltMotorVehiclesPerYEar$Emissions, type = "l", col ="blue", xlab = "Year", ylab = "Emissions (Tons of PM2.5/year)", main = "Baltimore City Vehicle Emissions")
dev.off()
install.packages("binom")
?t.test
n <- 9
mean <- 1100
std <- 30
meann + c(-1, 1) * qt(0.975, n - 1) * std/sqrt(n)
mean + c(-1, 1) * qt(0.975, n - 1) * std/sqrt(n)
n <- 9
mean <- -2
n <- 9
std <- 0.3
mean + c(-1, 1) * qt(0.975, n - 1) * std/sqrt(n)
std <- 1.5
mean + c(-1, 1) * qt(0.975, n - 1) * std/sqrt(n)
std <- 2.4
std <- 2.1
mean + c(-1, 1) * qt(0.975, n - 1) * std/sqrt(n)
std <- 2.6
mean + c(-1, 1) * qt(0.975, n - 1) * std/sqrt(n)
NewMean <- 3
NewStd <- 0.6
OldMean <- 5
OldStd <- 0.68
Mean <- NewMean-OldMean
n1 <- 10
n2 <- 10
sp <- ((n1-1)*NewStd+(n2-1)*OldStd)/(n1+n2-2)
Mean + c(-1,1)*qt(0.975, n1+n2-2)*sp*sqrt(1/n1 + 1/n2)
md <- 3-5
sp <- sqrt(((10 - 1) * .6 + (n2 - 1) * sd(x2)^2)/(n1 + n2 - 2))
sp <- sqrt(((10 - 1) * .6 + (10 - 1) * 0.68/(n1 + n2 - 2))
)
sp <- sqrt(((10 - 1) * .6 + (10 - 1) * 0.68/(18))
)
sp <- sqrt(((10 - 1) * .6 + (10 - 1) * 0.68)/(18))
m1 <- 3
m2 <- 5
md <- m1-m2
v1 <- .6
v2 <- .68
sp <- (v1+v2)/2
semd <- sp * sqrt(1/n1 + 1/n2)
n1 <- 10
n2 <- 10
semd <- sp * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
-2 + c(-1,1) * qt(.975,9) * sqrt(.64/10)
semd <- sqrt(sqrt(v1)+sqrt(v2))
semd
-2+c(-1,1)*qt(0.975, n1 + n2 - 2) * .64
qt(.975, 18)
CombinedVariance <- .64
StandardDeviation <- sqrt(.64)
Mean <- -2
semd <- StandardDeviation * sqrt(1/n1 + 1/n2)
n1 <- 10
n2 <- 10
semd <- StandardDeviation * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
Mean + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
n1 <- 100
n2 <- 100
NewMean <- 4
NewStd <- .5
OldMean <- 6
OldStd <- 2
CombinedMean <- OldMean - NewMean
CombinedVAriance <- (NewStd^2+OldStd^2)/2
CombinedStd <- sqrt(CombinedVariance)
CombinedVariance <- (NewStd^2+OldStd^2)/2
CombinedStd <- sqrt(CombinedVariance)
semd <- CombinedStd * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
CombinedMean + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
n1 <-9
n2 <- 9
TreatedMean <- -3
PlaceboMean <- 1
TreatedStd <- 1.5
PlaceboStd <- 1.8
CombinedVariance <- (TreatedStd^2+PlaceboStd^2)/2
CombinedStd <- sqrt(CombinedVariance)
semd <- CombinedStd * sqrt(1/n1 + 1/n2)
md <- TreatedMean-PlaceboMean
md + c(-1, 1) * qnorm(0.95, n1 + n2 - 2) * semd
md + c(-1, 1) * qnorm(0.95) * semd
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
summaryRprof()
x <- C(F,S,D,G,W)
x <- c(F,S,D,G,W)
x <- c("F","S","D","W","G")
sample(x)
set.seed(5624)
sample(x)
##Set working directory to where the output files for MyCarrierPlanInterpreter.java are
setwd("/home/frans/Documents/BPJ420/CarrierPlanInterpreter")
##RUNNING FIXED COSTS AND VARIABLE COSTS
##Read in the .csv file containing data about the fleet composition for running fixed costs and variable costs
FSMinfoRunFixAndVar <- read.csv("shipments_80_vehicleTypesFixedRunningAndVariablesumValues.csv")
##Make Seperate tables for each type of truck for running fixed costs and variable costs
RunFixAndVarThreeTonners <- FSMinfoRunFixAndVar[grep("truck_3",FSMinfoRunFixAndVar$vehId),]
RunFixAndVarSixTonners <- FSMinfoRunFixAndVar[grep("truck_6",FSMinfoRunFixAndVar$vehId),]
RunFixAndVarSevenTonners <- FSMinfoRunFixAndVar[grep("truck_7",FSMinfoRunFixAndVar$vehId),]
RunFixAndVarTwelveTonners <- FSMinfoRunFixAndVar[grep("truck_12",FSMinfoRunFixAndVar$vehId),]
RunFixAndVarFifteenTonners <- FSMinfoRunFixAndVar[grep("truck_15",FSMinfoRunFixAndVar$vehId),]
##Make a table indicating how many vehicles of each type was specified for running fixed costs and variable costs
CollumnNames <- c("3Tonners", "6Tonners", "7Tonners", "12Tonners", "15Tonners")
TruckTotals <- data.frame(matrix(nrow=0, ncol=5))
TruckTotals <- rbind(c(length(RunFixAndVarThreeTonners$vehId),length(RunFixAndVarSixTonners$vehId),length(RunFixAndVarSevenTonners$vehId),length(RunFixAndVarTwelveTonners$vehId),length(RunFixAndVarFifteenTonners$vehId)))
colnames(TruckTotals) <- CollumnNames
rownames(TruckTotals) <- "RunFixAndVar"
##VARIABLE COSTS ONLY
##Read in the .csv file containing data about the fleet composition for variable costs only
FSMinfoVar <- read.csv("shipments_80_vehicleTypesOnlyVariablesumValues.csv")
##Make Seperate tables for each type of truck for variable costs only
VarThreeTonners <- FSMinfoVar[grep("truck_3",FSMinfoVar$vehId),]
VarSixTonners <- FSMinfoVar[grep("truck_6",FSMinfoVar$vehId),]
VarSevenTonners <- FSMinfoVar[grep("truck_7",FSMinfoVar$vehId),]
VarTwelveTonners <- FSMinfoVar[grep("truck_12",FSMinfoVar$vehId),]
VarFifteenTonners <- FSMinfoVar[grep("truck_15",FSMinfoVar$vehId),]
##Append the data for using variable cost only to the TruckTotals data.frame
TruckTotals <- rbind(TruckTotals,c(length(VarThreeTonners$vehId),length(VarSixTonners$vehId),length(VarSevenTonners$vehId),length(VarTwelveTonners$vehId),length(VarFifteenTonners$vehId)))
rownames(TruckTotals) <- c("RunFixAndVar","VarOnly")
##RUNNING FIXED COSTS ONLY
##Read in the .csv file containing data about the fleet composition for running fixed cost only
FSMinfoRunFix <- read.csv("shipments_80_vehicleTypesOnlyFixedRunningsumValues.csv")
##Make Seperate tables for each type of truck for fixed cost only
RunFixThreeTonners <- FSMinfoRunFix[grep("truck_3",FSMinfoRunFix$vehId),]
RunFixSixTonners <- FSMinfoRunFix[grep("truck_6",FSMinfoRunFix$vehId),]
RunFixSevenTonners <- FSMinfoRunFix[grep("truck_7",FSMinfoRunFix$vehId),]
RunFixTwelveTonners <- FSMinfoRunFix[grep("truck_12",FSMinfoRunFix$vehId),]
RunFixFifteenTonners <- FSMinfoRunFix[grep("truck_15",FSMinfoRunFix$vehId),]
##Append the data for using variable cost only to the TruckTotals data.frame
TruckTotals <- rbind(TruckTotals,c(length(RunFixThreeTonners$vehId),length(RunFixSixTonners$vehId),length(RunFixSevenTonners$vehId),length(RunFixTwelveTonners$vehId),length(RunFixFifteenTonners$vehId)))
rownames(TruckTotals) <- c("RunFixAndVar","VarOnly","RunFixOnly")
##FIXED COSTS AND VARIABLE COSTS
##Read in the .csv file containing data about the fleet composition for fixed cost and variable cost
FSMinfoFixAndVar <- read.csv("shipments_80_vehicleTypesAbsFixAndVarsumValues.csv")
##Make Seperate tables for each type of truck for fixed and variable cost
FixAndVarThreeTonners <- FSMinfoFixAndVar[grep("truck_3",FSMinfoFixAndVar$vehId),]
FixAndVarSixTonners <- FSMinfoFixAndVar[grep("truck_6",FSMinfoFixAndVar$vehId),]
FixAndVarSevenTonners <- FSMinfoFixAndVar[grep("truck_7",FSMinfoFixAndVar$vehId),]
FixAndVarTwelveTonners <- FSMinfoFixAndVar[grep("truck_12",FSMinfoFixAndVar$vehId),]
FixAndVarFifteenTonners <- FSMinfoFixAndVar[grep("truck_15",FSMinfoFixAndVar$vehId),]
##Append the data for using fixed and variable cost to the TruckTotals data.frame
TruckTotals <- rbind(TruckTotals,c(length(FixAndVarThreeTonners$vehId),length(FixAndVarSixTonners$vehId),length(FixAndVarSevenTonners$vehId),length(FixAndVarTwelveTonners$vehId),length(FixAndVarFifteenTonners$vehId)))
rownames(TruckTotals) <- c("RunFixAndVar","VarOnly","RunFixOnly","FixAndVar")
##FIXED COST ONLY
##Read in the .csv file containing data about the fleet composition for fixed cost only
FSMinfoFix <- read.csv("shipments_80_vehicleTypesOnlyAbsFixsumValues.csv")
##Make Seperate tables for each type of truck for fixed cost only
FixThreeTonners <- FSMinfoFix[grep("truck_3",FSMinfoFixAndVar$vehId),]
FixSixTonners <- FSMinfoFix[grep("truck_6",FSMinfoFixAndVar$vehId),]
FixSevenTonners <- FSMinfoFix[grep("truck_7",FSMinfoFixAndVar$vehId),]
FixTwelveTonners <- FSMinfoFix[grep("truck_12",FSMinfoFixAndVar$vehId),]
FixFifteenTonners <- FSMinfoFix[grep("truck_15",FSMinfoFixAndVar$vehId),]
##Append the data for using fixed cost only to the TruckTotals data.frame
TruckTotals <- rbind(TruckTotals,c(length(FixThreeTonners$vehId),length(FixSixTonners$vehId),length(FixSevenTonners$vehId),length(FixTwelveTonners$vehId),length(FixFifteenTonners$vehId)))
rownames(TruckTotals) <- c("RunFixAndVar","VarOnly","RunFixOnly","FixAndVar","FixOnly")
TruckTotals
